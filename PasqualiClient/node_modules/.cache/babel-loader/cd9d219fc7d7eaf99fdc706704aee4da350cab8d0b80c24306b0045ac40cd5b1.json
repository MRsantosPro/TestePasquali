{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PessoaDataService from \"../service/PessoaDataService\";\nexport default {\n  name: \"Pessoa\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      errors: []\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    refreshUserDetails() {\n      PessoaDataService.retrieveUser(this.id).then(res => {\n        this.Nome = res.data.Nome;\n        this.Cpf = res.data.Cpf;\n        this.DataNascimento = res.data.DataNascimento;\n        this.Renda = res.data.Renda;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.Nome) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.Nome.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in First Name\");\n      }\n      if (!this.Cpf) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.Cpf.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          PessoaDataService.createUser({\n            Nome: this.Nome,\n            Cpf: this.Cpf,\n            DataNascimento: this.DataNascimento,\n            Renda: this.Renda\n          }).then(() => {\n            this.$router.push(\"/\");\n          }, err => this.errors.push(err.response.data[\"message\"]));\n        } else {\n          PessoaDataService.updateUser(this.id, {\n            id: this.id,\n            Cpf: this.Cpf,\n            DataNascimento: this.DataNascimento,\n            Renda: this.Renda\n          }).then(() => {\n            this.$router.push(\"/\");\n          }, err => this.errors.push(err.response.data[\"message\"]));\n        }\n      }\n    }\n  },\n  created() {\n    this.refreshUserDetails();\n  }\n};","map":{"version":3,"names":["PessoaDataService","name","data","firstName","lastName","email","errors","computed","id","$route","params","methods","refreshUserDetails","retrieveUser","then","res","Nome","Cpf","DataNascimento","Renda","validateAndSubmit","e","preventDefault","push","length","createUser","$router","err","response","updateUser","created"],"sources":["C:\\Users\\mrodr\\Downloads\\vue3Dotnet7CRUD-main\\vueCRUDSampleClient\\src\\components\\Pessoa.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>User</h3>\n    <div class=\"container\">\n      <form @submit=\"validateAndSubmit\">\n        <div v-if=\"errors.length\">\n          <div\n            class=\"alert alert-danger\"\n            v-bind:key=\"index\"\n            v-for=\"(error, index) in errors\"\n          >\n            {{ error }}\n          </div>\n        </div>\n        <fieldset class=\"form-group\">\n          <label>Nome</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"Nome\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>CPF</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"Cpf\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Data de Nascimento</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"DataNascimento\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Renda</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"Renda\" />\n        </fieldset>\n        <button class=\"btn btn-success\" type=\"submit\">Save</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport PessoaDataService from \"../service/PessoaDataService\";\n\nexport default {\n  name: \"Pessoa\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    refreshUserDetails() {\n      PessoaDataService.retrieveUser(this.id).then((res) => {\n        this.Nome = res.data.Nome;\n        this.Cpf = res.data.Cpf;\n        this.DataNascimento = res.data.DataNascimento;\n        this.Renda = res.data.Renda;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.Nome) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.Nome.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in First Name\");\n      }\n      if (!this.Cpf) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.Cpf.length < 5) {\n        this.errors.push(\"Enter atleast 5 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          PessoaDataService.createUser({\n            Nome: this.Nome,\n            Cpf: this.Cpf,\n            DataNascimento: this.DataNascimento,\n            Renda: this.Renda,\n          }).then(() => {\n            this.$router.push(\"/\");\n          }, err => this.errors.push(err.response.data[\"message\"]));\n        } else {\n          PessoaDataService.updateUser(this.id, {\n            id: this.id,\n            Cpf: this.Cpf,\n            DataNascimento: this.DataNascimento,\n            Renda: this.Renda,\n          }).then(() => {\n            this.$router.push(\"/\");\n          }, err => this.errors.push(err.response.data[\"message\"]));\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}